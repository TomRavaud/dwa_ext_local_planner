# Custom values for the parameters of the local planner
DWAExtPlannerROS:
  # x: direction parallel to robot's straight movement
  # y: direction perpendicular to robot's straight movement, useful for holonomic robots

  # Robot configuration parameters
  # Accelerations
  acc_lim_x: 3.0  # default 3.0 m/s^2
  acc_lim_y: 100.0  # must be >> 0 for non-holonomic robots in order to have max y vel = min y vel in the simple trajectory generator (because the y velocity given by the odometry topic is not exactly equal to zero)
  acc_lim_theta: 6.0  # default 6.0 rad/s^2

  # x linear velocity
  max_vel_x: 1  # default 1.0 m/s, traversability: 0.5
  min_vel_x: 0.1  # traversability: 0.5

  # y linear velocity (should be set to zero for non-holonomic robots)
  max_vel_y: 0.0
  min_vel_y: 0.0

  # z angular velocity
  max_vel_theta: 0.5  # default 2.0 rad/s, traversability 0.3
  min_vel_theta: 0.0

  # Translational velocity (same as x velocity)
  max_vel_trans: 1.0  # Maximum speed in the direction of advance (max de sqrt(vel_x**2 + vel_y**2))
  min_vel_trans: 1.0

  # Goal Tolerance Parameters
  yaw_goal_tolerance: 0.1  # Angle in radians (default: 0.1)
  xy_goal_tolerance: 0.5  # (default: 0.2)
  latch_xy_goal_tolerance: false

  # Forward Simulation Parameters
  sim_time: 5.5  # Number of seconds to look forward
  sim_granularity: 0.2  # Time step used to discretize a trajectory

  # Velocities sampling
  vx_samples: 10  # traversability: 1
  vy_samples: 1
  vth_samples: 20  # traversability: 6

  penalize_negative_x: true

  # Trajectory scoring parameters
  path_distance_bias: 32.0  # The weighting for how much the controller should stay close to the path it was given
  goal_distance_bias: 20.0  # The weighting for how much the controller should attempt to reach its local goal, also controls speed
  occdist_scale: 0.02  # The weighting for how much the controller should attempt to avoid obstacles
  # forward_point_distance: 0.325 # The distance from the center point of the robot to place an additional scoring point, in meters
  # stop_time_buffer: 0.2  # The amount of time that the robot must stThe absolute value of the veolicty at which to start scaling the robot's footprint, in m/sop before a collision in order for a trajectory to be considered valid in seconds
  # scaling_speed: 0.25 # The absolute value of the veolicty at which to start scaling the robot's footprint, in m/s
  # max_scaling_factor: 0.2 # The maximum factor to scale the robot's footprint by

  # Oscillation Prevention Parameters
  oscillation_reset_dist: 0.05 # How far the robot must travel in meters before oscillation flags are reset (double, default: 0.05)


  Traversability:
    # image_topic: "zed_node/rgb/image_rect_color"
    image_topic: "camera1/image_raw"
    model_definition_file: "/home/tom/Traversability-Tom/catkin_ws/src/dwa_ext_local_planner/models/resnet18/resnet18_classification.pt"
